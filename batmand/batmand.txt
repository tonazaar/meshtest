A) Basic test setup with batmand 
laptop(no internet) -> RSP(1) -> RSP(2) -> Internet
Mesh between RSP(1) - RSP(2)
Mesh between RSP(1) - RSP(2) - RSP(3)

B) References
https://medium.com/swlh/setting-up-an-ad-hoc-mesh-network-with-raspberry-pi-3b-using-batman-adv-1c08ee565165
https://www.open-mesh.org/projects/open-mesh/wiki/Routing_scenarios
https://www.open-mesh.org/projects/batmand/wiki/BATMAN_Daemon_HowTo
https://www.open-mesh.org/projects/batmand/wiki/InternetTuning
https://www.open-mesh.org/projects/batmand/wiki/VisualizeMesh

C) Note
1) Both dhcpcd and wpa_supplicant services to be stopped. This is needed, since these services manipulate the ad-hoc mesh network configurations that effectively breaks the network. An advanced setup should compromise with these services, but this tutorial will not cover such a setup. In addition I also disable hostapd just to be sure, but you may regressively try to enable above services with the necessary configurations after having a working base. Following snippet sets up a password-free ad-hoc connection on each node:

2) In contrast to other routing protocols each batman node only knows the path to its single hop neighbors and knows nothing about the topology behind it. In practice it means that a batman node S is aware of node A which is somewhere in the mesh and reachable via neighbor B but it does not know about the number of hops and / or nodes in between.

D) Installation
sudo pacman -Sy batctl

E) Announcement
https://www.open-mesh.org/projects/batmand/wiki/AnnouncingNetworks

Adding the announcement for e.g. the local network:

batmand -c -a 192.168.1.0/24
Adding multiple announcements in one go:

batmand -c -a 192.168.1.0/24 -a 192.168.100.123/32
Revoking an announcement:

batmand -c -A 192.168.1.0/24
Revoking multiple announcements in one go:

batmand -c -A 192.168.1.0/24 -A 192.168.100.123/32

F) Batmand kernel setup
https://www.open-mesh.org/projects/batmand/wiki/Faq
What is the batgat kernel module good for?
The batman daemon maintains a tunnel connection to every "batman internet client". Every packet that goes to the internet or comes back has to go through this tunnel. As it is a user space tunnel a lot of copying between user space and kernel land is necessary. Depending on the number of clients and the CPU power available this might be a bottleneck.
The batgat kernel module tries to overcome this limitation. 


G) Batmand man page
https://downloads.open-mesh.org/batman/manpages/batmand.8.html

EXAMPLES
       batmand eth1 wlan0:test
              Start batman daemon on interface "eth1" and on  alias  interface
              "wlan0:test"

       batmand -o 2000 -a 192.168.100.1/32 -a 10.0.0.0/24 eth1
              Start batman daemon on interface "eth1" with originator interval
              of 2000 ms while announcing 192.168.100.1 and 10.0.0.0/24.

       batmand -s 192.168.1.1 -d 1 eth1
              Start batman daemon on interface "eth1", sending topology infor-
              mation to 192.168.1.1 and with debug level 1 (does not fork into
              the background).

       batmand eth1 && batmand -c -d 1 -b
              Start batman daemon on interface "eth1". Connect in client  mode
              to get the debug level 1 output once (batch mode).

       batmand -g 2000kbit/500kbit eth1 && batmand -c -r 1
              Start  batman  daemon  on  interface "eth1" as internet gateway.
              Connect in client mode to disable the internet gateway  and  en-
              able internet search mode.


Work

1)  wget \
> https://downloads.open-mesh.org/batman/stable/sources/batman/batman-0.3.tar.gz


2) tar xzvf batman-0.3.tar.gz


3) make

4) cp batmand /usr/sbin/
cp: cannot create regular file '/usr/sbin/batmand': Permission denied
[alarm@alarmpi batman-0.3]$ sudo cp batmand /usr/sbin/
[sudo] password for alarm: 
[alarm@alarmpi batman-0.3]$ batmand eth0
Error - you must be root to run batmand !
[alarm@alarmpi batman-0.3]$ sudo batmand eth0
Interface activated: eth0
Using interface eth0 with address 10.42.0.66 and broadcast address 10.42.0.255

5) Hanging

Experiment-1
sudo batmand wlan0:test
[sudo] password for alarm: 
Not using interface wlan0:test (retrying later): interface not active
[alarm@alarmpi ~]$ nmcli connection       
NAME                UUID                                  TYPE      DEVICE 
local-ap            0613852f-685f-4bd9-805d-26ac101c3ddf  wifi      wlan0  
Wired connection 1  73459040-78ec-3e2d-9fe8-7e62a6088dec  ethernet  eth0   

-> AP connection fine

Experiment-2
sudo batmand wlan0:test
Deleting default route via unknown (table 67)
Deleting default route via unknown (table 67)
Error - unknown rta type: 14 
Error - unknown rta type: 21 
Not using interface wlan0:test (retrying later): interface not active

Experiment-3
Wlan0 up,
sudo nmcli connection up Jio123
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/4)
[alarm@alarmpi ~]$ sudo batmand wlan0:test
Deleting default route via unknown (table 67)
Deleting default route via unknown (table 67)
Error - unknown rta type: 14 
Error - unknown rta type: 21 
Not using interface wlan0:test (retrying later): interface not active
[alarm@alarmpi ~]$  nmcli connection          
NAME                UUID                                  TYPE      DEVICE 
Wired connection 1  73459040-78ec-3e2d-9fe8-7e62a6088dec  ethernet  eth0   
Jio123              13607a69-c41e-4fd3-9433-fba559994710  wifi      wlan0  
AndroidAPramesh     f208b009-d44d-4c0a-843e-5a7a06e6c303  wifi      --     

ip a

wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether dc:a6:32:60:95:4a brd ff:ff:ff:ff:ff:ff
    inet 192.168.29.203/24 brd 192.168.29.255 scope global dynamic noprefixroute wlan0
       valid_lft 3466sec preferred_lft 3466sec
    inet 192.168.88.1/24 brd 192.168.88.255 scope global noprefixroute wlan0


